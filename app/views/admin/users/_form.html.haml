= semantic_form_for [:admin, @user], :html => {:multipart => true} do |f|

  = f.inputs do
    = f.input :email
    = f.input :roles, :as => :check_boxes, :collection => User::ROLES

    = f.input :permissions, :as => :hidden, :value => @user.permissions.to_json

  = f.actions do
    = f.action :submit, :label => true
    = f.action :cancel, :as => :link, :label => I18n.t('active_admin.cancel'), :wrapper_html => { :class => 'cancel' }

%script{id: 'selectTemplate', type: 'text/html'}
  = '<select id="{{:select_id}}" {{if multiple}}multiple{{/if}} size="5">'.html_safe
  = '{{for options}}'
  = "<option value='{{:id}}' {{:~isSelected(id, #parent.parent.data.permissions)}}>{{:name}}</option>".html_safe
  = '{{/for}}'
  = '</select>'.html_safe

= javascript_include_tag "jsrender"
:javascript
  $.views.helpers({
    isSelected: function(id, permissions) {
      var selected = " selected";
      switch(typeof permissions) {
        case 'number':
          return id == permissions? selected : "";
          break;
        case 'object':
          for(var i = 0; i < permissions.length; i++) {
            if (id == permissions[i])
              return selected;
          }
          break;
      }
    }
  });

  var permissions = $.parseJSON($("#user_permissions").val());
  var coaches = #{@coaches.to_json};
  var teams = #{@teams.to_json};

  checkbox_add({name: "team_manager", collection: teams, multiple: 'true'});
  checkbox_add({name: "coach", collection: coaches});
  checkbox_add({name: "parent", collection: teams, multiple: 'true'});
  checkbox_add({name: "player", collection: teams});

  function checkbox_add(options) {
    var checkbox = $("#user_roles_"+options.name);
    checkbox.parent().after($("#selectTemplate").render({
      select_id: options.name + '_permissions',
      multiple: options.multiple,
      options: options.collection,
      permissions: permissions[options.name]
    }));

    var select = $("#" + options.name + "_permissions");
    checkbox.change(function() {
      $(this).is(':checked') ? select.show() : select.hide();
    }).change();
  }

  $("form").submit(function() {
    alert('submitting form');
  });
  /*
    Configure roles and permissions through a json block:
      Manager -> has one or more teams
      Coach -> has one coach
      Parent -> has one or more teams
      Player -> has one team

      TODO: Need to pull down coaches and teams - create hidden drop downs for them and insert them into the DOM when item is clicked
   */