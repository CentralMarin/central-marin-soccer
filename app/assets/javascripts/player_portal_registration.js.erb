(function () {
    namespace('player_portal');

    player_portal.registration_wizard = (function() {
        var CROP_WIDTH = 300;
        var CROP_HEIGHT = 300;
        var OPT_OUT_INDEX = 1;
        var _jcrop_api;
        var _success;
        var _errorMsgs;

        var _invalid_file = function(msg, elem) {
            _showAlert(msg);

            // reset the input
            elem.value = '';
        };

        var _isImage = function(input) {

            var fileElem = input.files[0];

            // Verify the size of the file
            var size = fileElem.size;
            if (size > 6000000) {
                _invalid_file('File too large.', fileElem);
                return;
            }

            // Verify the file extension
            var ext = input.value.match(/\.([^.]*)$/)[1].toLowerCase();
            switch(ext)
            {
                case 'jpeg':
                case 'jpg':
                case 'bmp':
                case 'png':
                case 'tif':
                    return true;
                default:
                    _invalid_file('Invalid file type. Please upload an image.', fileElem);
                    return false;
            }
        };

        var _file_selected = function(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {

                    if (_isImage(input)) {
                        var $input = $(input);
                        $input.siblings('img').attr('src', e.target.result);

                        // Update the heading
                        _taskCompleted($input.closest('.panel'));
                    }

                };
                reader.readAsDataURL(input.files[0]);
            }
        };

        // Destroy the current canvas and create a new one
        var _swapCanvas = function() {
            var $canvas = $('#canvas');
            var $parent = $canvas.parent();
            $canvas.remove();

            $('<canvas>').attr({
                id: 'canvas',
                class: 'img-responsive',
                height: 300
            }).appendTo($parent);
        };

        var _picture = function(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function (e) {

                    if (_isImage(input)) {
                        var $input = $(input);
                        var $img = $input.siblings('img');
                        $img.attr('src', e.target.result);

                        // Clean up any old jcrops so the image updates
                        if (_jcrop_api) _jcrop_api.destroy();

                        // Load the image so we can determine it's dimensions
                        var image = new Image();
                        image.src = e.target.result;
                        image.onload = function () {

                            _swapCanvas();

                            var img_width = this.width;
                            var img_height = this.height;

                            $img.Jcrop({
                                onChange: _canvas,
                                onSelect: _canvas,
                                trueSize: [img_width, img_height],
                                aspectRatio: 1
                            }, function () {

                                x1 = img_width / 4;
                                x2 = x1 * 3;
                                y1 = img_height / 4;
                                y2 = y1 * 3;

                                // put the crop box in the center of the image
                                this.setSelect([x1, y1, x2, y2]);
                                _jcrop_api = this;

                                // Turn heading to completed
                                _taskCompleted($input.closest('.panel'));
                            });
                        };
                    }

                };
                reader.readAsDataURL(input.files[0]);
            }
        };

        var _taskCompleted = function(elem) {

            // Swap the color and the icon
            _swapClass(elem, 'panel-danger', 'panel-success');
            _swapClass(elem.find('.panel-title').find('.glyphicon-alert'), 'glyphicon-alert', 'glyphicon-ok');
        };

        var _swapClass = function(elem, removeClass, addClass) {
            elem.removeClass(removeClass).addClass(addClass);
        };

        var _scrollToTop = function() {
            $('html, body').animate({scrollTop : 0},800);
            return false;
        };

        var _canvas = function (coords){
            var imageObj = $("#jcrop")[0];
            var canvas = $("#canvas")[0];
            canvas.height = canvas.width;   // Keep our aspect ratio
            var context = canvas.getContext("2d");
            if (coords.w == 0 && coords.h == 0) {
                coords.w = CROP_WIDTH;
                coords.h = CROP_HEIGHT;
            }
            context.drawImage(imageObj, coords.x, coords.y, coords.w, coords.h, 0, 0, canvas.width, canvas.height);
            png();
        };

        var png = function () {
            var jpg = $("#canvas")[0].toDataURL('image/jpeg', 1.0);
            $("#jpg").val(jpg);
        };

        var _toggleVolunteerFee = function(show) {

            var tableShow;
            var tableHide;
            if (show) {
                tableShow = $('#feesWithOptOut');
                tableHide = $('#fees');
            } else {
                tableShow = $('#fees');
                tableHide = $('#feesWithOptOut');
            }

            tableShow.removeClass('hidden');
            tableHide.addClass('hidden');

            var complete = $('#finish');
            complete.data('amount', tableShow.data('amount'));
            complete.data('description', tableShow.data('description'));
        };

        var _submitForm = function(url, formData) {

            var pleaseWait = $('#pleaseWaitDialog');

            // Show the pleaseWaitDialog
            pleaseWait.modal('show');

            $.ajax({
                url: url,
                data: formData,
                contentType: false,
                processData: false,
                type: 'POST'
            })
                .done(function(data) {
                    window.location.href = _success + '?success=1';
                })
                .fail(function(data) {
                    // Dismiss the modal and show the error message
                    pleaseWait.modal('hide');

                    if (data.status == 402) {
                        _showAlert(JSON.parse(data.responseText).error);
                    } else {
                        _showAlert(_errorMsgs.fiveHundred);
                    }
                });
        };

        var _showAlert = function(mesg) {
            var alert = $('#alert');
            alert.find('.message').html(mesg);
            alert.show();
            _scrollToTop();
        };

        var _setupStripe = function(key, success) {

            // Setup Stripe
            var handler = StripeCheckout.configure({
                key: key,
                image: 'https://s3.amazonaws.com/stripe-uploads/acct_17gopvKdw52ZEJhQmerchant-icon-1456253746398-logo.png',
                locale: 'auto',
                token: function(token) {
                    // Due to high fees, we do not accept American Express cards
                    if (token.card.brand == 'American Express') {
                        _showAlert(_errorMsgs.amex);
                        return;
                    }

                    var form = $('#finish').parents('form');
                    var formData = new FormData(form[0]);
                    formData.append('stripeToken', token.id);
                    formData.append('stripeEmail', token.email);

                    _submitForm(form.attr('action'), formData);
                }
            });

            var button = $('#finish');
            button.on('click', function(e) {

                // Check if the user has read the docs
                var volunteer = $('#volunteer');
                if (volunteer.length != 0 && volunteer.find('input:checked').length == 0) {
                    _showAlert(_errorMsgs.docs);
                    return false;
                }

                // Open Checkout with further options
                handler.open({
                    name: 'Central Marin Soccer Club',
                    description: button.data('description'),
                    amount: button.data('amount')
                });
                e.preventDefault();
            });

            // Close Checkout on page navigation
            $(window).on('popstate', function() {
                handler.close();
            });
        };

        var init = function(defaultImageSrc, key, success, hidePayment, errorMsgs) {
            _success = success;
            _errorMsgs = errorMsgs;

            $("#wizard-picture").change(function(){
                _picture(this);
            });

            $("#wizard-birth").change(function() {
                _file_selected(this);
            });

            //Click event to scroll to top
            $('input[name="next"]').click(_scrollToTop);
            $('input[name="previous"]').click(_scrollToTop);

            var $jcrop = $("#jcrop");
            // Show default image on the player card
            $jcrop
                .one('load', function() {
                    var canvas = $("#canvas")[0];
                    canvas.height = canvas.width;   // Keep our aspect ratio
                    var context = canvas.getContext("2d");
                    context.drawImage($jcrop[0], 0, 0);
                })
                .attr('src', defaultImageSrc);

            if (!hidePayment) {

                // volunteer event handler
                var volunteer = $('select[name="volunteer"]');
                volunteer.on('change', function () {
                    _toggleVolunteerFee(this.selectedIndex == OPT_OUT_INDEX);
                });
                _toggleVolunteerFee(volunteer[0].selectedIndex == OPT_OUT_INDEX);

                _setupStripe(key, success);
            } else {
                var finish = $('#finish');
                finish.on('click', function (e) {
                    var form = finish.parents('form');
                    var formData = new FormData(form[0]);

                    _submitForm(form.attr('action'), formData);
                });
            }
        };

        return {
            init:init
        };

    }());

}());